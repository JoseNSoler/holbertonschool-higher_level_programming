====================================================
 Fourth tester-module -- 4-print_square.txt
====================================================



Usage 4-print_square.txt
======================

This module prints a perfect square maded of '#' of int parameter ``size``

``def print_square(size)``.



First initialization
====================

Import module and function

    >>> print_square = __import__('4-print_square').print_square


Tests cases with normal strings
=============


Square 4x4
____
    >>> print_square(4)
    ####
    ####
    ####
    ####


Square 10x10
____
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########


Square 1x1
____
    >>> print_square(1)
    #




Parameter type errors
====================

One parameter is an array
____
    >>> print_square(["1", "2", "3"])
    Traceback (most recent call last):
    TypeError: size must be an integer


One parameter is an int or float
____
    >>> print_square(5.89)
    Traceback (most recent call last):
    TypeError: size must be an integer


Size parameter less to 0
____
    >>> print_square(-5)
    Traceback (most recent call last):
    ValueError: size must be >= 0



Exceptions
==========

None Parameters
____
    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer


Empty Parameters
____
    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
